From 14db2dbb6d9f9a51df2207db2591b23a8d6169f9 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Mon, 19 Sep 2022 10:26:18 +0800
Subject: [PATCH 69/81] modesetting: Support freezing display

Freeze display when the specified file(from env "XSERVER_FREEZE_DISPLAY")
exists.

For example:
export XSERVER_FREEZE_DISPLAY=/tmp/.freeze
touch $XSERVER_FREEZE_DISPLAY
X -wr&

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 hw/xfree86/drivers/modesetting/dri2.c         |  2 +-
 hw/xfree86/drivers/modesetting/driver.c       | 30 +++++++++++++------
 hw/xfree86/drivers/modesetting/driver.h       |  1 +
 .../drivers/modesetting/drmmode_display.c     | 20 +++++++++++++
 hw/xfree86/drivers/modesetting/present.c      |  2 +-
 5 files changed, 44 insertions(+), 11 deletions(-)

diff --git a/hw/xfree86/drivers/modesetting/dri2.c b/hw/xfree86/drivers/modesetting/dri2.c
index 4a5ed28bd..caad79f1b 100644
--- a/hw/xfree86/drivers/modesetting/dri2.c
+++ b/hw/xfree86/drivers/modesetting/dri2.c
@@ -590,7 +590,7 @@ can_flip(ScrnInfoPtr scrn, DrawablePtr draw,
     modesettingPtr ms = modesettingPTR(scrn);
 
     return draw->type == DRAWABLE_WINDOW &&
-        ms->drmmode.pageflip &&
+        !ms->freeze && ms->drmmode.pageflip &&
         !ms->drmmode.sprites_visible &&
         !ms->drmmode.present_flipping &&
         scrn->vtSema &&
diff --git a/hw/xfree86/drivers/modesetting/driver.c b/hw/xfree86/drivers/modesetting/driver.c
index 3883cc201..4926d005a 100644
--- a/hw/xfree86/drivers/modesetting/driver.c
+++ b/hw/xfree86/drivers/modesetting/driver.c
@@ -723,7 +723,7 @@ ms_dirty_get_ent(ScreenPtr screen, PixmapPtr secondary_dst)
     return NULL;
 }
 
-static void
+static Bool
 msBlockHandler(ScreenPtr pScreen, void *timeout)
 {
     modesettingPtr ms = modesettingPTR(xf86ScreenToScrn(pScreen));
@@ -731,10 +731,26 @@ msBlockHandler(ScreenPtr pScreen, void *timeout)
     xf86CrtcConfigPtr xf86_config = XF86_CRTC_CONFIG_PTR(pScrn);
     int c;
 
+    /* HACK: Ignore the first request */
+    if (ms->warm_up) {
+        ms->warm_up = FALSE;
+        *((int *)timeout) = 16;
+        return FALSE;
+    }
+
+    if (!access(getenv("XSERVER_FREEZE_DISPLAY") ? : "", F_OK)) {
+        ms->freeze = TRUE;
+        *((int *)timeout) = 16;
+        return FALSE;
+    } else if (ms->freeze) {
+        ms->freeze = FALSE;
+        drmmode_set_desired_modes(pScrn, &ms->drmmode, TRUE, FALSE);
+    }
+
     pScreen->BlockHandler = ms->BlockHandler;
     pScreen->BlockHandler(pScreen, timeout);
     ms->BlockHandler = pScreen->BlockHandler;
-    pScreen->BlockHandler = msBlockHandler;
+    pScreen->BlockHandler = (void *)msBlockHandler;
     if (pScreen->isGPU && !ms->drmmode.reverse_prime_offload_mode)
         dispatch_secondary_dirty(pScreen);
     else {
@@ -755,6 +771,7 @@ msBlockHandler(ScreenPtr pScreen, void *timeout)
     }
 
     ms_dirty_update(pScreen, timeout);
+    return TRUE;
 }
 
 static void
@@ -763,13 +780,8 @@ msBlockHandler_oneshot(ScreenPtr pScreen, void *pTimeout)
     ScrnInfoPtr pScrn = xf86ScreenToScrn(pScreen);
     modesettingPtr ms = modesettingPTR(pScrn);
 
-    /* HACK: Ignore the first request */
-    if (ms->warm_up) {
-        ms->warm_up = FALSE;
+    if (!msBlockHandler(pScreen, pTimeout))
         return;
-    }
-
-    msBlockHandler(pScreen, pTimeout);
 
     drmmode_set_desired_modes(pScrn, &ms->drmmode, TRUE, FALSE);
 }
@@ -1534,7 +1546,7 @@ msEnableSharedPixmapFlipping(RRCrtcPtr crtc, PixmapPtr front, PixmapPtr back)
         return FALSE;
 
     /* Not supported if we can't flip */
-    if (!ms->drmmode.pageflip)
+    if (ms->freeze || !ms->drmmode.pageflip)
         return FALSE;
 
     /* Not currently supported with reverse PRIME */
diff --git a/hw/xfree86/drivers/modesetting/driver.h b/hw/xfree86/drivers/modesetting/driver.h
index 357e6a124..170897631 100644
--- a/hw/xfree86/drivers/modesetting/driver.h
+++ b/hw/xfree86/drivers/modesetting/driver.h
@@ -193,6 +193,7 @@ typedef struct _modesettingRec {
     } exa;
 
     Bool warm_up;
+    Bool freeze;
 
     XF86VideoAdaptorPtr adaptor;
 } modesettingRec, *modesettingPtr;
diff --git a/hw/xfree86/drivers/modesetting/drmmode_display.c b/hw/xfree86/drivers/modesetting/drmmode_display.c
index 635692b95..bcc5a2f2e 100644
--- a/hw/xfree86/drivers/modesetting/drmmode_display.c
+++ b/hw/xfree86/drivers/modesetting/drmmode_display.c
@@ -1596,6 +1596,13 @@ drmmode_crtc_dpms(xf86CrtcPtr crtc, int mode)
     drmmode_crtc_private_ptr drmmode_crtc = crtc->driver_private;
     drmmode_ptr drmmode = drmmode_crtc->drmmode;
 
+    if (ms->freeze) {
+        xf86DrvMsg(crtc->scrn->scrnIndex, X_INFO,
+                   "Ignoring dpms on crtc-%d (freezed)\n",
+                   drmmode_crtc->mode_crtc->crtc_id);
+        return;
+    }
+
     /* XXX Check if DPMS mode is already the right one */
 
     drmmode_crtc->dpms_mode = mode;
@@ -1768,6 +1775,13 @@ drmmode_set_mode_major(xf86CrtcPtr crtc, DisplayModePtr mode,
     if (drmmode->hotplug_reset && !drmmode_crtc_connected(crtc))
         return ret;
 
+    if (ms->freeze) {
+        xf86DrvMsg(crtc->scrn->scrnIndex, X_INFO,
+                   "Ignoring modeset on crtc-%d (freezed)\n",
+                   drmmode_crtc->mode_crtc->crtc_id);
+        return ret;
+    }
+
     saved_mode = crtc->mode;
     saved_x = crtc->x;
     saved_y = crtc->y;
@@ -3028,6 +3042,12 @@ drmmode_output_dpms(xf86OutputPtr output, int mode)
     if (!koutput)
         return;
 
+    if (ms->freeze) {
+        xf86DrvMsg(output->scrn->scrnIndex, X_INFO,
+                   "Ignoring dpms on output-%s (freezed)\n", output->name);
+        return;
+    }
+
     /* XXX Check if DPMS mode is already the right one */
 
     drmmode_output->dpms = mode;
diff --git a/hw/xfree86/drivers/modesetting/present.c b/hw/xfree86/drivers/modesetting/present.c
index d7a4f1b53..90d941e23 100644
--- a/hw/xfree86/drivers/modesetting/present.c
+++ b/hw/xfree86/drivers/modesetting/present.c
@@ -241,7 +241,7 @@ ms_present_check_unflip(RRCrtcPtr crtc,
     int i;
     struct gbm_bo *gbm;
 
-    if (!ms->drmmode.pageflip)
+    if (ms->freeze || !ms->drmmode.pageflip)
         return FALSE;
 
     if (ms->drmmode.dri2_flipping)
-- 
2.38.5

