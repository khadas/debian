From e0a9dfce60c0f21eb9dc5c178a5c3ad79b15db0b Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 27 Apr 2022 15:17:39 +0800
Subject: [PATCH 63/92] backend-drm: Stop disabling unused CRTCs by default

So that we can launch multiple weston instances for different monitors.

Set env "WESTON_DRM_MASTER" to take charge of all CRTCs again.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 libweston/backend-drm/drm-internal.h | 1 +
 libweston/backend-drm/drm.c          | 7 +++++++
 libweston/backend-drm/kms.c          | 6 +++---
 3 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/libweston/backend-drm/drm-internal.h b/libweston/backend-drm/drm-internal.h
index a6f08f74..bab4574b 100644
--- a/libweston/backend-drm/drm-internal.h
+++ b/libweston/backend-drm/drm-internal.h
@@ -340,6 +340,7 @@ struct drm_backend {
 	int64_t last_resize_ms;
 	int64_t resize_freeze_ms;
 
+	bool master;
 	bool single_head;
 	bool head_fallback;
 	bool head_fallback_all;
diff --git a/libweston/backend-drm/drm.c b/libweston/backend-drm/drm.c
index 8df107b9..4a872bc5 100644
--- a/libweston/backend-drm/drm.c
+++ b/libweston/backend-drm/drm.c
@@ -2255,6 +2255,9 @@ drm_output_detach_crtc(struct drm_output *output)
 	/* Force resetting unused CRTCs */
 	b->state_invalid = true;
 	output->state_invalid = true;
+
+	/* HACK: Do it here rather than in the kms.c for drm-master config */
+	drmModeSetCrtc(b->drm.fd, crtc->crtc_id, 0, 0, 0, NULL, 0, NULL);
 }
 
 static int
@@ -4243,6 +4246,10 @@ drm_backend_create(struct weston_compositor *compositor,
 	if (b == NULL)
 		return NULL;
 
+	buf = getenv("WESTON_DRM_MASTER");
+	if (buf && buf[0] == '1')
+		b->master = true;
+
 	buf = getenv("WESTON_DRM_SINGLE_HEAD");
 	if (buf && buf[0] == '1')
 		b->single_head = true;
diff --git a/libweston/backend-drm/kms.c b/libweston/backend-drm/kms.c
index 4608e39d..d0de7965 100644
--- a/libweston/backend-drm/kms.c
+++ b/libweston/backend-drm/kms.c
@@ -1206,7 +1206,7 @@ drm_pending_state_apply_atomic(struct drm_pending_state *pending_state,
 		break;
 	}
 
-	if (b->state_invalid) {
+	if (b->state_invalid && b->master) {
 		struct weston_head *head_base;
 		struct drm_head *head;
 		struct drm_crtc *crtc;
@@ -1404,7 +1404,7 @@ drm_pending_state_apply(struct drm_pending_state *pending_state)
 		return drm_pending_state_apply_atomic(pending_state,
 						      DRM_STATE_APPLY_ASYNC);
 
-	if (b->state_invalid) {
+	if (b->state_invalid && b->master) {
 		/* If we need to reset all our state (e.g. because we've
 		 * just started, or just been VT-switched in), explicitly
 		 * disable all the CRTCs we aren't using. This also disables
@@ -1480,7 +1480,7 @@ drm_pending_state_apply_sync(struct drm_pending_state *pending_state)
 		return drm_pending_state_apply_atomic(pending_state,
 						      DRM_STATE_APPLY_SYNC);
 
-	if (b->state_invalid) {
+	if (b->state_invalid && b->master) {
 		/* If we need to reset all our state (e.g. because we've
 		 * just started, or just been VT-switched in), explicitly
 		 * disable all the CRTCs we aren't using. This also disables
-- 
2.34.1

