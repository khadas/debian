From 1218c6c44a065be2026b5820b90b3dfd3e960683 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 6 Jan 2021 04:11:48 +0800
Subject: [PATCH 43/92] backend-drm: Support modifier

Tested on rk3588 with:
unset WESTON_DISABLE_ATOMIC
export WESTON_ALLOW_GBM_MODIFIERS=1
export DRM_PLANE_TYPE_152=primary
export DRM_PLANE_TYPE_128=overlay
weston&

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 libweston/backend-drm/drm-gbm.c      | 15 ++++-
 libweston/backend-drm/drm-internal.h |  1 +
 libweston/backend-drm/drm.c          | 97 ++++++++++++++++++++++------
 libweston/backend-drm/kms.c          |  6 +-
 libweston/pixel-formats.c            |  2 +
 5 files changed, 98 insertions(+), 23 deletions(-)

diff --git a/libweston/backend-drm/drm-gbm.c b/libweston/backend-drm/drm-gbm.c
index bcc2b174..1c1d7e0a 100644
--- a/libweston/backend-drm/drm-gbm.c
+++ b/libweston/backend-drm/drm-gbm.c
@@ -181,6 +181,7 @@ err:
 static void
 create_gbm_surface(struct gbm_device *gbm, struct drm_output *output)
 {
+	struct drm_backend *b = to_drm_backend(output->base.compositor);
 	struct weston_mode *mode = output->base.current_mode;
 	struct drm_plane *plane = output->scanout_plane;
 	struct weston_drm_format *fmt;
@@ -196,9 +197,19 @@ create_gbm_surface(struct gbm_device *gbm, struct drm_output *output)
 	}
 
 #ifdef HAVE_GBM_MODIFIERS
-	if (!weston_drm_format_has_modifier(fmt, DRM_FORMAT_MOD_INVALID) &&
-	    !weston_drm_format_has_modifier(fmt, DRM_FORMAT_MOD_LINEAR)) {
+	/* HACK: Prefer valid modifilers */
+	if (b->fb_modifiers) {
+#define MAX_MODIFIERS 128
+		uint64_t _modifiers[MAX_MODIFIERS];
+		int i, j;
 		modifiers = weston_drm_format_get_modifiers(fmt, &num_modifiers);
+		for (i = 0, j = 0; i < (int)num_modifiers; i++) {
+			if (DRM_MOD_VALID(modifiers[i]) && j < MAX_MODIFIERS)
+				_modifiers[j++] = modifiers[i];
+		}
+		modifiers = _modifiers;
+		num_modifiers = j;
+
 		output->gbm_surface =
 			gbm_surface_create_with_modifiers(gbm,
 							  mode->width, mode->height,
diff --git a/libweston/backend-drm/drm-internal.h b/libweston/backend-drm/drm-internal.h
index b4a73d41..d490d162 100644
--- a/libweston/backend-drm/drm-internal.h
+++ b/libweston/backend-drm/drm-internal.h
@@ -528,6 +528,7 @@ struct drm_plane {
 	struct weston_drm_format_array formats;
 
 	bool can_scale;
+	bool has_modifiers;
 };
 
 struct drm_connector {
diff --git a/libweston/backend-drm/drm.c b/libweston/backend-drm/drm.c
index eee2dd3c..9660d8b1 100644
--- a/libweston/backend-drm/drm.c
+++ b/libweston/backend-drm/drm.c
@@ -1224,6 +1224,42 @@ err:
 	return NULL;
 }
 
+static inline bool
+drm_plane_has_modifier(struct drm_plane *plane, uint32_t format)
+{
+	struct weston_drm_format *fmt;
+	const uint64_t *modifiers;
+	unsigned int num_modifiers, i;
+
+	fmt = weston_drm_format_array_find_format(&plane->formats, format);
+	if (!fmt)
+		return false;
+
+	modifiers = weston_drm_format_get_modifiers(fmt, &num_modifiers);
+	for (i = 0; i < num_modifiers; i++) {
+		if (DRM_MOD_VALID(modifiers[i]))
+			return true;
+	}
+
+	return false;
+}
+
+static inline bool
+drm_planes_have_modifier(struct drm_backend *b)
+{
+	struct drm_plane *plane;
+
+	if (!b->fb_modifiers)
+		return false;
+
+	wl_list_for_each_reverse(plane, &b->plane_list, link) {
+		if (plane->has_modifiers)
+			return true;
+	}
+
+	return false;
+}
+
 /**
  * Find, or create, a special-purpose plane
  *
@@ -1236,7 +1272,10 @@ drm_output_find_special_plane(struct drm_backend *b, struct drm_output *output,
 			      enum wdrm_plane_type type)
 {
 	struct drm_plane *plane;
+	bool prefer_modifier =
+		b->fb_modifiers && type == WDRM_PLANE_TYPE_PRIMARY;
 
+retry:
 	wl_list_for_each(plane, &b->plane_list, link) {
 		struct drm_output *tmp;
 		bool found_elsewhere = false;
@@ -1264,10 +1303,19 @@ drm_output_find_special_plane(struct drm_backend *b, struct drm_output *output,
 		if (found_elsewhere)
 			continue;
 
+		if (prefer_modifier &&
+		    !drm_plane_has_modifier(plane, output->gbm_format))
+			continue;
+
 		plane->possible_crtcs = (1 << output->crtc->pipe);
 		return plane;
 	}
 
+	if (prefer_modifier) {
+		prefer_modifier = false;
+		goto retry;
+	}
+
 	return NULL;
 }
 
@@ -4260,9 +4308,6 @@ drm_backend_create(struct weston_compositor *compositor,
 
 	compositor->backend = &b->base;
 
-	if (parse_gbm_format(config->gbm_format, DRM_FORMAT_XRGB8888, &b->gbm_format) < 0)
-		goto err_compositor;
-
 	/* Check if we run drm-backend using weston-launch */
 	compositor->launcher = weston_launcher_connect(compositor, config->tty,
 						       seat_id, true);
@@ -4296,15 +4341,42 @@ drm_backend_create(struct weston_compositor *compositor,
 		goto err_udev_dev;
 	}
 
+	res = drmModeGetResources(b->drm.fd);
+	if (!res) {
+		weston_log("Failed to get drmModeRes\n");
+		goto err_udev_dev;
+	}
+
+	wl_list_init(&b->crtc_list);
+	if (drm_backend_create_crtc_list(b, res) == -1) {
+		weston_log("Failed to create CRTC list for DRM-backend\n");
+		goto err_create_crtc_list;
+	}
+
+	wl_list_init(&b->plane_list);
+	create_sprites(b, res);
+
+	if (!drm_planes_have_modifier(b))
+		b->fb_modifiers = false;
+
+	b->gbm_format = DRM_FORMAT_XRGB8888;
+
+	/* HACK: The modifiers only work with xbgr8888 now */
+	if (b->fb_modifiers)
+		b->gbm_format = DRM_FORMAT_XBGR8888;
+
+	if (parse_gbm_format(config->gbm_format, b->gbm_format, &b->gbm_format) < 0)
+		goto err_sprite;
+
 	if (b->use_pixman) {
 		if (init_pixman(b) < 0) {
 			weston_log("failed to initialize pixman renderer\n");
-			goto err_udev_dev;
+			goto err_sprite;
 		}
 	} else {
 		if (init_egl(b) < 0) {
 			weston_log("failed to initialize egl\n");
-			goto err_udev_dev;
+			goto err_sprite;
 		}
 	}
 
@@ -4318,21 +4390,6 @@ drm_backend_create(struct weston_compositor *compositor,
 
 	weston_setup_vt_switch_bindings(compositor);
 
-	res = drmModeGetResources(b->drm.fd);
-	if (!res) {
-		weston_log("Failed to get drmModeRes\n");
-		goto err_udev_dev;
-	}
-
-	wl_list_init(&b->crtc_list);
-	if (drm_backend_create_crtc_list(b, res) == -1) {
-		weston_log("Failed to create CRTC list for DRM-backend\n");
-		goto err_create_crtc_list;
-	}
-
-	wl_list_init(&b->plane_list);
-	create_sprites(b, res);
-
 	if (udev_input_init(&b->input,
 			    compositor, b->udev, seat_id,
 			    config->configure_device) < 0) {
diff --git a/libweston/backend-drm/kms.c b/libweston/backend-drm/kms.c
index 0dc0c40d..1dc49ca4 100644
--- a/libweston/backend-drm/kms.c
+++ b/libweston/backend-drm/kms.c
@@ -38,6 +38,7 @@
 
 #include <libweston/libweston.h>
 #include <libweston/backend-drm.h>
+#include <libweston/linux-dmabuf.h>
 #include "shared/helpers.h"
 #include "shared/weston-drm-fourcc.h"
 #include "drm-internal.h"
@@ -525,6 +526,9 @@ drm_plane_populate_formats(struct drm_plane *plane, const drmModePlane *kplane,
 			ret = weston_drm_format_add_modifier(fmt, mod->modifier);
 			if (ret < 0)
 				goto out;
+
+			if (DRM_MOD_VALID(mod->modifier))
+				plane->has_modifiers = true;
 		}
 
 		if (fmt->modifiers.size == 0)
@@ -1604,7 +1608,7 @@ init_kms_caps(struct drm_backend *b)
 	weston_log("DRM: %s atomic modesetting\n",
 		   b->atomic_modeset ? "supports" : "does not support");
 
-	if (!getenv("WESTON_DISABLE_GBM_MODIFIERS")) {
+	if (getenv("WESTON_ALLOW_GBM_MODIFIERS")) {
 		ret = drmGetCap(b->drm.fd, DRM_CAP_ADDFB2_MODIFIERS, &cap);
 		if (ret == 0)
 			b->fb_modifiers = cap;
diff --git a/libweston/pixel-formats.c b/libweston/pixel-formats.c
index 172e6cca..85fae20f 100644
--- a/libweston/pixel-formats.c
+++ b/libweston/pixel-formats.c
@@ -220,6 +220,8 @@ static const struct pixel_format_info pixel_format_table[] = {
 	{
 		DRM_FORMAT(XBGR8888),
 		BITS_RGBA_FIXED(8, 8, 8, 0),
+		.depth = 24,
+		.bpp = 32,
 		GL_FORMAT(GL_RGBA),
 		GL_TYPE(GL_UNSIGNED_BYTE),
 #if __BYTE_ORDER == __LITTLE_ENDIAN
-- 
2.34.1

