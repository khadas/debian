From 403bcd6a2cbe12d725c8cdbc231a16c238c9d1d8 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Mon, 3 Oct 2022 21:03:04 +0800
Subject: [PATCH 78/92] desktop-shell: Fix crash when hotplugging screens

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 desktop-shell/input-panel.c |  4 ++++
 desktop-shell/shell.c       | 12 ++++++++++--
 libweston/compositor.c      |  6 ++++++
 3 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/desktop-shell/input-panel.c b/desktop-shell/input-panel.c
index 0897ffde..56ec43ab 100644
--- a/desktop-shell/input-panel.c
+++ b/desktop-shell/input-panel.c
@@ -63,6 +63,10 @@ static int
 calc_input_panel_position(struct input_panel_surface *ip_surface, float *x, float*y)
 {
 	struct desktop_shell *shell = ip_surface->shell;
+
+	if (!ip_surface->output)
+		return -1;
+
 	if (ip_surface->panel) {
 		struct weston_view *view = get_default_view(shell->text_input.surface);
 		if (view == NULL)
diff --git a/desktop-shell/shell.c b/desktop-shell/shell.c
index 6473600a..db8e8e69 100644
--- a/desktop-shell/shell.c
+++ b/desktop-shell/shell.c
@@ -4398,6 +4398,8 @@ check_desktop_shell_crash_too_early(struct desktop_shell *shell)
 	if (clock_gettime(CLOCK_MONOTONIC, &now) < 0)
 		return false;
 
+	/* HACK: The shell might be crashed too early when hotplugging */
+#if 0
 	/*
 	 * If the shell helper client dies before the session has been
 	 * up for roughly 30 seconds, better just make Weston shut down,
@@ -4413,6 +4415,7 @@ check_desktop_shell_crash_too_early(struct desktop_shell *shell)
 
 		return true;
 	}
+#endif
 
 	return false;
 }
@@ -4942,10 +4945,14 @@ shell_output_destroy(struct shell_output *shell_output)
 	if (shell_output->fade.startup_timer)
 		wl_event_source_remove(shell_output->fade.startup_timer);
 
-	if (shell_output->panel_surface)
+	if (shell_output->panel_surface) {
 		wl_list_remove(&shell_output->panel_surface_listener.link);
-	if (shell_output->background_surface)
+		shell_output->panel_surface->committed = NULL;
+	}
+	if (shell_output->background_surface) {
 		wl_list_remove(&shell_output->background_surface_listener.link);
+		shell_output->background_surface->committed = NULL;
+	}
 	wl_list_remove(&shell_output->destroy_listener.link);
 	wl_list_remove(&shell_output->link);
 	free(shell_output);
@@ -5131,6 +5138,7 @@ desktop_shell_destroy_layer(struct weston_layer *layer)
 	wl_list_for_each_safe(view, view_next, &layer->view_list.link, layer_link.link) {
 		struct shell_surface *shsurf =
 			get_shell_surface(view->surface);
+		weston_layer_entry_remove(&view->layer_link);
 		/* fullscreen_layer is special as it would have a view with an
 		 * additional black_view created and added to its layer_link
 		 * fullscreen view. See shell_ensure_fullscreen_black_view()
diff --git a/libweston/compositor.c b/libweston/compositor.c
index f554ee69..50be3f03 100644
--- a/libweston/compositor.c
+++ b/libweston/compositor.c
@@ -6611,6 +6611,7 @@ static void
 weston_compositor_remove_output(struct weston_output *output)
 {
 	struct weston_compositor *compositor = output->compositor;
+	struct weston_animation *animation, *atmp;
 	struct weston_paint_node *pnode, *pntmp;
 	struct weston_view *view;
 	struct weston_head *head;
@@ -6618,6 +6619,11 @@ weston_compositor_remove_output(struct weston_output *output)
 	assert(output->destroying);
 	assert(output->enabled);
 
+	wl_list_for_each_safe(animation, atmp, &output->animation_list, link) {
+		wl_list_remove(&animation->link);
+		wl_list_init(&animation->link);
+	}
+
 	wl_list_for_each_safe(pnode, pntmp,
 			      &output->paint_node_list, output_link) {
 		weston_paint_node_destroy(pnode);
-- 
2.34.1

